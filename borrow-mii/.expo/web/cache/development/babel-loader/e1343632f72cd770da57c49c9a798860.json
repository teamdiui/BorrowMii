{"ast":null,"code":"import { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var handlePress = function handlePress() {\n    console.log(\"button pressed\");\n    navigation.navigate('Borrowed', {\n      name: 'Jane'\n    });\n  };\n\n  return _jsxs(View, {\n    style: background.container,\n    children: [_jsx(StatusBar, {\n      style: \"auto\"\n    }), _jsx(View, {\n      style: div.container\n    }), _jsx(View, {\n      style: flexbox.container,\n      children: _jsx(Text, {\n        children: \"HELLO WORLD I AM AN APP DEVELOPER NOW V3\"\n      })\n    }), _jsx(View, {\n      style: div.container\n    }), _jsxs(View, {\n      style: flexbox.container,\n      children: [_jsx(Text, {\n        children: \"Press the Button Below For Cool stuff: \"\n      }), _jsx(Pressable, {\n        onPress: function onPress() {\n          handlePress();\n        },\n        style: function style(_ref2) {\n          var pressed = _ref2.pressed;\n          return [{\n            backgroundColor: pressed ? 'rgb(210, 230, 255)' : 'white'\n          }, styles.wrapperCustom];\n        },\n        children: function children(_ref3) {\n          var pressed = _ref3.pressed;\n          return _jsx(Text, {\n            style: styles.text,\n            children: pressed ? 'Pressed!' : 'Press Me'\n          });\n        }\n      })]\n    }), _jsx(View, {\n      style: div.container\n    }), _jsx(View, {\n      style: flexbox.container,\n      children: _jsx(Text, {\n        children: \" AHA MOMENT REEEEEEEEEEEEEEEEEEEEEEEEEEEEEE\"\n      })\n    }), _jsx(View, {\n      style: div.container\n    })]\n  });\n}\nvar background = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'dodgerblue',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nvar flexbox = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'orange',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 8,\n    padding: 6\n  }\n});\nvar div = StyleSheet.create({\n  container: {\n    flex: .25,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\"\n  },\n  text: {\n    fontSize: 16\n  },\n  wrapperCustom: {\n    borderRadius: 8,\n    padding: 6\n  },\n  logBox: {\n    padding: 20,\n    margin: 10,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderColor: '#f0f0f0',\n    backgroundColor: '#f9f9f9'\n  }\n});","map":{"version":3,"names":["StatusBar","HomeScreen","navigation","handlePress","console","log","navigate","name","background","container","div","flexbox","pressed","backgroundColor","styles","wrapperCustom","text","StyleSheet","create","flex","alignItems","justifyContent","borderRadius","padding","fontSize","logBox","margin","borderWidth","hairlineWidth","borderColor"],"sources":["C:/Users/alex mini/Documents/ProjectBorrowMii/borrow-mii/HomeScreen.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport { StyleSheet, Text, View,Pressable } from 'react-native';\r\n\r\nexport default function HomeScreen({navigation}) {\r\n\r\n  const handlePress = () => {\r\n      console.log(\"button pressed\");\r\n      navigation.navigate('Borrowed',{name:'Jane'})\r\n  }\r\n  return (\r\n    <View style={background.container}>\r\n          <StatusBar style=\"auto\" />\r\n\r\n        \r\n          <View style={div.container}></View>\r\n          \r\n      <View style={flexbox.container}>\r\n      <Text>HELLO WORLD I AM AN APP DEVELOPER NOW V3</Text>\r\n      </View>\r\n      <View style={div.container}></View>\r\n      \r\n      <View style={flexbox.container}>\r\n        <Text>Press the Button Below For Cool stuff: </Text>\r\n        <Pressable\r\n        onPress={() => {\r\n          //setTimesPressed((current) => current + 1);\r\n            handlePress()\r\n        }}\r\n        style={({ pressed }) => [\r\n          {\r\n            backgroundColor: pressed\r\n              ? 'rgb(210, 230, 255)'\r\n              : 'white'\r\n          },\r\n          styles.wrapperCustom\r\n        ]}>\r\n        {({ pressed }) => (\r\n          <Text style={styles.text}>\r\n            {pressed ? 'Pressed!' : 'Press Me'}\r\n          </Text>\r\n        )}\r\n      </Pressable>\r\n      </View>\r\n      <View style={div.container}></View>\r\n      <View style={flexbox.container}>\r\n        <Text> AHA MOMENT REEEEEEEEEEEEEEEEEEEEEEEEEEEEEE</Text>\r\n      </View>\r\n      <View style={div.container}></View>\r\n      </View>\r\n  );\r\n}\r\n\r\nconst background = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: 'dodgerblue',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\nconst flexbox = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: 'orange',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    borderRadius: 8,\r\n    padding: 6\r\n  },\r\n});\r\nconst div = StyleSheet.create({\r\n  container: {\r\n    flex: .25,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n  },\r\n  text: {\r\n    fontSize: 16\r\n  },\r\n  wrapperCustom: {\r\n    borderRadius: 8,\r\n    padding: 6\r\n  },\r\n  logBox: {\r\n    padding: 20,\r\n    margin: 10,\r\n    borderWidth: StyleSheet.hairlineWidth,\r\n    borderColor: '#f0f0f0',\r\n    backgroundColor: '#f9f9f9'\r\n  }\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}